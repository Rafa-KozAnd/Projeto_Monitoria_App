// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


    // const monitorias = await client.$queryRaw`
    //                     SELECT 
    //                         * 
    //                     FROM 
    //                         "monitoria" m
    //                     JOIN
    //                         "disciplina" d ON d."" == m.codigo_disciplina
    //                     JOIN
    //                         "aluno_monitoria am ON am."id_monitoria" == m."id"
    //                     WHERE 
    //                         matricula = ${matricula}`


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model aluno {
  matricula          String              @id
  nome               String
  senha              String 
  email              String
  telefone           String
  e_monitor          Boolean
  aluno_monitoria     aluno_monitoria[]
  vaga_aluno_monitoria vaga_aluno_monitoria[]
  agendamento        agendamento[]
  solicitacao_monitoria solicitacao_monitoria[]
}

model solicitacao_agendamento {
  matriculaAluno    String              @id // FK
  dataSolicitacao   DateTime
  agendamento       String  // FK
  id_monitoria      String // FK
}

model agendamento {
  id              Int    @id @default(autoincrement())
  agendamento     String
  aluno           aluno    @relation(fields:[matricula_aluno], references:[matricula])
  matricula_aluno String
  monitoria       monitoria @relation(fields:[id_monitoria], references:[id])
  id_monitoria    Int // FK
  horario         DateTime
}
model aluno_monitoria {
  id               Int       @id @default(autoincrement())
  aluno            aluno     @relation(fields: [matricula_aluno], references: [matricula])
  matricula_aluno String
  monitoria        monitoria @relation(fields: [id_monitoria], references: [id])
  id_monitoria     Int
}

model colaborador {
  cpf           String          @id
  nome          String
  email         String
  senha         String
  role          Role
  monitoria     monitoria[]
  disciplina    disciplina[]
  vaga_monitoria vaga_monitoria[]
}



model colaboradorFuncao {
  id             String @id
  id_colaborador String //FK
  idFuncao       String //FK
}

model funcao {
  id   Int    @id
  nome String @unique
}

model monitoria {
  id                Int              @id @default(autoincrement())
  disciplina        disciplina       @relation(fields: [codigo_disciplina], references: [codigo_disciplina])
  codigo_disciplina String
  colaborador       colaborador      @relation(fields: [codigo_professor], references: [cpf])
  codigo_professor  String
  horario           DateTime
  aluno_monitoria     aluno_monitoria[]
  vaga_monitoria     vaga_monitoria[]
  agendamento       agendamento[]
}

model disciplina {
  codigo_disciplina    String      @id
  colaborador          colaborador @relation(fields: [professor_disciplina], references: [cpf])
  professor_disciplina String
  nome                 String
  monitoria            monitoria[]
  vaga_monitoria        vaga_monitoria[]
  solicitacao_monitoria solicitacao_monitoria[]
}

model vaga_monitoria {
  id                     Int                  @id @default(autoincrement())
  colaborador            colaborador          @relation(fields: [professor_requisitante], references: [cpf])
  professor_requisitante String
  monitoria              monitoria            @relation(fields: [id_monitoria], references: [id])
  id_monitoria           Int             
  disciplina             disciplina           @relation(fields: [codigo_disciplina], references: [codigo_disciplina])
  codigo_disciplina      String
  aprovado               Boolean // Creio que esse campo não sera necessario
  vaga_aluno_monitoria  vaga_aluno_monitoria[]
  pre_requisito          String?
}

model vaga_aluno_monitoria {
  aluno           aluno         @relation(fields: [matricula_aluno], references: [matricula])
  matricula_aluno String        
  vaga_monitoria   vaga_monitoria @relation(fields: [id_vaga], references: [id])
  id_vaga         Int           
  status          Int           @default(0)
  motivo          String?
  @@unique([matricula_aluno,id_vaga])
}

model solicitacao_monitoria {
  id                    Int           @id @default(autoincrement())
  disciplina            disciplina   @relation(fields: [codigo_disciplina], references: [codigo_disciplina])
  codigo_disciplina     String
  motivo                String?
  status                Int    // 1 ou 2 talvez não precise.. avaliar
  monitorRecomendado    String?
  AlunoSolicitante      aluno        @relation(fields: [matricula_aluno], references: [matricula])
  matricula_aluno       String
}

enum Role {
  Professor
  Coordenador
  ProfessorCoordenador
}